# g2_ircddb Configuration

ircddb = {
	login = "CHANGEME!!!!";             # login callsign for the ircDDB network
#	host = "rr.openquad.net"   # other include group1-irc.ircddb.net
#	port = 9007					# not a good idea to change!
#	password = "1111111111111"	# not needed for Openquad
}

gateway = {
#	regen_header = true        # regenerate headers from incoming data
#	send_qrgs_maps = true      # send frequecy, offset, cooridinates and url to irc-server
#	local_irc_ip = "0.0.0.0"   # 0.0.0.0 means accept any incoming connections
#	arps_send = true           # send info to aprs
#	ip = "127.0.0.1"           # where the gateway is running

    external = {
#		ip = "0.0.0.0"
#		port = 40000
	}
	
	internal = {
#		ip = "0.0.0.0"
#		port = 19000
	}
}

module = {
	a = {
#		type = ""
#		ip = "127.0.0.1"
#		port = 19998       # default for mod a
	}

	b = {
	# a DVRPTR connected to a 70cm radio is shown in this example

		# type must be defined. This is how the dvrptr program finds the config params.
#		type = "dvrptr"

		# If you operate in "restriction mode", set callsign equal to your personal callsign
		# Otherwise do not set callsign and we will use ircddb.username
#		callsign = ""

		# the frequency of your DVAP in MHz.
#		frequency = 145.5

		# the TX/RX offset in MHz, use 0.0 for simplex
#		offset = 0

		# the range of this repeater, in meters 1609.344 meters is 1.0 miles
#		range = 0.0

		# the height above ground level for you repeater's antenna
#		agl = 0.0

		# the latitude of your repeater
#		latitude = 0.0

		# the longitude of your repeater
#		longitude = 0.0

		# This is used in a loop to wait for packets from your local gateway
		# This is in milliseconds
#		packet_wait = 25

		# description of repeater, part one and two 20 char max each
#		desc1 = ""
#		desc2 = ""

		# the url of your repeater, 80 chars max, defaults to "github.com/n7tae/g2_ircddb
#		url = ""           # 80 char max, defaults to "github.com/n7tae/g2_ircddb

		# If you want to enable/disable the repeater, set these options.
		#   Each of these options can NOT be more than 8 characters.
		#   Each of these options can NOT be another user's callsign.
		#   Each of these options can NOT be another repeater or reflector.
		#   Each of these options can NOT be a YRCALL command.
		#   If these options are set, then they can NOT be equal to each other.
		#   Using the above options, if you use YRCALL=RFISOFF in your radio
		#   then the repeater will be OFF and no audio will be copied over local RF
		#   and no audio will be accepted from any remote system.
		#	these command are disabled by default
		#   You can choose your own command strings, if you want to enable these
		rf_control = {
#			on = "RFISON"
#			off = "RFISOFF"
		}

		# To protect the repeater owners from bad STN programs out there
		#   and to also protect the repeater owners from RF users that abuse the STN stuff
		# Reject values in YRCALL that start with STN
		#  If you want to allow the local RF users to subscribe to remote STN groups,
		#      then set it to XXX or something that is invalid like 123
#		invalid_prefix = "XXX"

		# Your DVRPTR V1 serial number
		# If you don't know what it is, run the program and look in the log file!
#		serial_number = "00.00.00.00"

		# the dvrptr program runs here, leave the commented out unless you know what you are doing!
#		internal_ip = "0.0.0.0"
#		port = 19999        # default for mod b

		# Some settings for your DVRPTR modem (see DVRPTR V1 manual for more info).
#		rf_rx_level = 80

		# If you need duplex, set it to true
#		duplex = false

		# Do you want an ACK back ?
#		acknowledge = false

		# ACK delay in milliseconds(ms)
		#  Minimum is 1, maximum is 999
		#  If you do not get a repeater ACK, then make it a higher number
		#  Some radios get the ACK in 250ms, other radios require 750ms
#		ack_delay = 300

		# This is the TX-delay in milliseconds and it is used to delay the PTT.
		# Seme radios have "SLOW" switching time, 
		# If your radio switches slow from RX to TX, then give your radio more time to switch, maybe 250 ms
		# If your radio switches fast from RX to TX, then you could set it to 100 ms or maybe less
		#   But the best value should be the one to match your radio, so read the manual for your radio.
		#   In tests that were done for SLOW and FAST radios, we set it to 100 for FAST radios and 250 for SLOW radios.
#		tx_delay = 250

		# Dead firmware ?
		# Lets say that you set RQST_COUNT=10
		# When there is NO local RF activity, (we do NOT receive anything from the DV-RPTR modem),
		#   then every 2 seconds we request the status from the DV-RPTR modem.
		#   If the DV-RPTR modem does NOT reply to our command, then after sending the command 10 times(RQST_COUNT)
		#   we have to assume the firmware in the DV-RPTR modem is DEAD.
		#   So, we send the command every 2 sedonds, and after sending the command 10 times,
		#   that is about (2 * 10) = 20 seconds,
		#   the repeater software will stop if the DV-RPTR modem does not respond after 20 seconds( 2 seconds * 10 times )
		#   and then the service script will restart the repeater software.
		# This is used to protect the repeater owner from BAD firmware.
		# Minimum value is 6.
		# If you see in the log this: "Modem is not responding... shuttting down"
		#   Then that means that the firmware died and the DV-RPTR modem stopped responding.
		#   You can increase the value of RQST_COUNT if you have a slow computer,
		#    (or maybe your computer is running too many programs and can not service the USB/serial fast enough)
		#    but we were informed that this is a bug in the firmware and they are trying to fix it.
		#    So, increasing the value for RQST_COUNT to higher than 10, does not make much sense.
#		rqst_count = 10

		# These values depend on what type of tranceiver is connected to your DV-RPTR modem
		#   Use either true or false
		inverse = {
#			rx = true
#			tx = true
		}
	}

	c = {
	# a 2m DVAP is shown as an example

		# type must be defined. This is how the dvap_rptr program finds the config params.
#		type = "dvap"

		# If you operate in "restriction mode", set RPTR equal to your personal callsign
		# Otherwise do not set callsign and it will use ircddb.username
#		callsign = ""

		# TX DVAP power level -12 to 10, 10 is maximum poower
#		power = 10

		# Squelch, -128 to -45, -100 to -80 usually works best
#		squelch = -100

		# To protect the repeater owners from bad STN programs out there
		#   and to also protect the repeater owners from RF users that abuse the STN stuff
		# Reject values in YRCALL that start with STN
		#  If you want to allow the local RF users to subscribe to remote STN groups,
		#      then set it to XXX or something that is invalid like 123
#		ivalid_prefix = "XXX"

		# The serial number of you DVAP is visible through the bottom of the case
#		serial_number = "APXXXXXX"

		# the DVAP will send a blip to acknowledge a transmission
#		acknowledge = false

		# the frequency of your DVAP in MHz.
#		frequency = 145.5

		# this is for tweaking the frequency of your DVAP, see the owner's manual
#		dvap_offset = 0

		# the range of this repeater, in meters 1609.344 meters is 1.0 miles
#		range = 0.0

		# the height above ground level for you repeater's antenna
#		agl = 0.0

		# the latitude of your repeater
#		latitude = 0.0

		# the longitude of your repeater
#		longitude = 0.0

		# This is used in a loop to wait for packets from your local gateway
		# This is in milliseconds
#		packet_wait = 25

		# description of repeater, part one and two 20 char max each
#		desc1 = ""
#		desc2 = ""

		# the url of your repeater, 80 chars max, defaults to "github.com/n7tae/g2_ircddb
#		url = ""           # 80 char max, defaults to "github.com/n7tae/g2_ircddb

		# where other g2 programs find this repeater software
#		ip = "127.0.0.1"   # where is the device running? must be a "dotted number"

		# the internal ip of this program, "0.0.0.0" is usually best
#		internal_ip = "0.0.0.0"

		# port number default: A:19998 B:19999 C:20000
#		port = 20000       # default for mod C
	}
}
	
	
log = {
	# debuging and extra logging switches
#	qso = true      # QSO info goes into the log
#	irc = false     # IRC debug info
#	dtmf = false    # DTMF debug info
}
	
aprs = { 	# APRS.NET connect info
#	host = "rotate.aprs.net"
#	port = 14580
#	interval = 40
#	filter = ""
}

g2_link = {
#	link_at_start = "NONE" # Link to a reflector at startup.
#                             to link repeater module B to REF001 C, use "BREF001C"
#	ref_login = ""             # for loging into REF reflectors, if undefined, ircddb.username will be used
#	admin = [ "CALL1", "CALL2", "CALL3" ]          # if defined, only these users can execute scripts, block dongles and reload the gwys.txt
	                                               # you probabaly want you own callsign in the admin list!
#	link_unlink = [ "CALL4", "CALL5", "CALL6" ]    # if defined, only these users can link and unlink a repeater
#	incoming_ip = "0.0.0.0"     # incoming ip address, "0.0.0.0" means accepts all connections.
#	ip = "127.0.0.1"   # where g2_link is running
#	port = 18997       # port for communications to g2_link
#	ref_port = 20001   # port for REF linking, don't change
#	xrf_port = 30001   # port for XRF linking, don't change
#	dcs_port = 30051   # port for DCS linking, don't change
#	announce = true    # do link, unlink, etc. announcements
#	acknowledge = true # sent text acknowledgement on key-up
#	max_dongles = 5    # maximum number of linked hotspots
}

file = {
#	status = "/usr/local/etc/rptr_status"  # where repeater status info is passed between services
#	DTMF = "/tmp"                          # 
#	echotest = "/tmp"                      # echo dat files will end up here
#	gwys = "/usr/local/etc/gwys.txt"       # where the list of gateways and reflectors (with ports) is.
#	announce_dir = "/usr/local/etc"        # where are the *.dat files for the verbal link, unlink, etc. announcements
}

timing = {
	timeout = {
#		echo = 1         # delay time in seconds for echo
#		voicemail = 1    # delay time for voicemail
#		remote_g2 = 2    # after this many seconds with no packets, we assume the tx is closed
#		local_rptr = 1   # local timeout, in seconds
	}
	
	play = {
#		wait = 2          # seconds before playback occurs, between 1 and 10
#		delay = 19        # microseconds between frames playback, if echo sounds bad, adjust this up or down 1,2 microseconds
	}

	inactivity = {
#		a = 0             # unlink repeater if no activity for this many minutes
#		b = 0             # zero mean there will be no timer
#		c = 0
	}
}
